
fun main() {
   
    //println("o println serve para exibir textos no console")
    /*
     * para 
     * fazer
     * coment√°rios de 
     * mais
     * de 
     * uma
     * linha
     */
    
    


//--------------------------------------------------------------------------------------------------------------------------------------

/*
fun main() {
    //exerc√≠cio: fazer um di√°logo de minimo 10 linhas usando a declara√ß√£o println()
    
    println("Rogers_ j√° viu a teoria dos n√∫meros 3 6 9 ?")
    println("<Rogers> A teoria se surge atrav√©s de que, quase tudo nesse mundo √© resumido aos n√∫meros 3,6,9 ")
    println("<???> Mas como assim? ")
    println("<Rogers> √â assim. O ano tem 12 meses, resumindo voc√™ consegue dividir esses 12 por 6 ou por 3")
    println("<???> Mas n√£o faz sentido Rogers")
    println("<Rogers> Calma rapaz, vou te fazer pensar agora")
    println("<Rogers> A √°gua √© formado por tr√™s √°tomos, que s√£o: 2 hidrog√™nio e 1 oxig√™nio. Ou seja s√£o tr√™s √°tomos que formam a √°gua")
    println("<???> Oxi??")
    println("<Rogers> Uma gesta√ß√£o de uma mulher dura em torno de 9 meses. Conhecid√™ncia ou n√£o")
    println("<Rogers> Tudo tem come√ßo, meio e fim. 3 tamb√©m ")
    println("<Rogers> O dia tem 24 horas, que s√£o poss√≠veis dividir pelos n√∫meros 3 e 6")
    println("<Rogers> Bom eu acho que isso n√£o √© conhecid√™ncia, n√£o √© ")
    println("<???> Ai voc√™ tem um ponto, e √© um belo ponto")
	
    //Vari√°veis - armazenam valores, dados, informa√ß√µes
    
    //val - n√£o mut√°vel - n√£o podemos alterar seu valor
    //var - mut√°vel - podemos alterar seu valor
    //
    //Tipos de vari√°veis: desafio p/ casa - N√ÉO √â OBRIGAT√ìRIO!!!(OPCIONAL)
    //
    //String - armazena valores de tipo texto - dentro de ""
    //Int - armazena n√∫meros interos ==> 7042
    //Float - armazena n√∫meros reais (no geral) - necessario de um f no valor
    //Double - armazena n√∫meros quebrados (de forma arredondada) ==> 7.15
    //Long - armazena n√∫meros longos ==> 54564386546546.784486
    //Boolean - verdadeiro ou falso
    **/
    
    
    var cr7 ="Cristiano Ronaldo"
    var numeroChampions = 5
    var altura = 1.87
    
    //Concatena√ß√£o
    //
   // print("O nome dele √© " + cr7 +", ele tem " + numeroChampions")
   // print(" t√≠tulos de Champions Legue e ele tem" + altura SIIIIUU eu sou u milio)
    
    //var LaPulga = "Lionel Messi"
   // var champions = 4
   //var alturaDele = 1.82
    
    //print("O nome dele e $laPulga, ele tem $champions t√≠tulos de chamions, e ele $alturaDele de altura")
    
    //Fa√ßa uma apresenta√ß√£o de si mesmo, usando no m√≠nimo
    //5 vari√°veis e usando o m√©todo de concatena√ß√£o
    
    var Ri ="Richard"
    var idade = 16
    var Altura = 1.74
    var Estado = "S√£o Paulo"
    var Comida  = "frutos do mar"
    
    println("Meu nome √©" + Ri + ", eu tenho" + idade + ", minha altura" + Altura + ",moro em" + Estado + ", comida favorita" + Comida)

//Operadores matem√°ticos
    //
    // + => adi√ß√£o
    // - => subtra√ß√£o
    // / => divis√£o
    // * => multiplica√ß√£o
    // % => m√≥dulo - o resto de uma divis√£o
    
    //println(15 % 2) 
    //
    //Operadores Relacionais 
    //
    //
    // == => igual a...
    // != => diferente de...
    // > => maior que... 
    // < => menor que...
    // >= -> maior ou igual a...
    // <= -> menor ou igual a...
    
    //Desafiob Calculadora: fazer um programa que simule uma calculadora
    //Deve ter pelo menos 2 vari√°veis de tipo Int e pelo menos 4 println's
    //cada um obtendo um calculo diferente(adi√ßao, subtra√ß√£o, multplica√ß√£o
    //e divi√ß√£o) que relacionam as duas vari√°veis  neste c√°lculo :)
    //
    //o primeiro que conseguir... chocolate
    //
    //iremos corrigir
    
    var n4 = 1235
    var n7 = 63
    println("***üëãOla sej√° bem vindo a***")
    println("***(üëªüñ©Caluladora Ghostüñ©üëª)***")
    println("*** Aqui nos teremos varios tipos de contas e resultados")
    println("*** ‚úñÔ∏èMultiplica√ß√£o entre n4 e n7‚úñÔ∏è ***")
    println("*** O resultado da multiplica√ß√£o √©:" + (n4 * n7))
    println("*** ‚ûóDivis√£o entre n4 e n7‚ûó ***")
    println("*** O resultado da divis√£o √©:" + (n4 / n7))
    println("*** Foi um prazer ser ultilizado por vc, volte mais vezesüëç ***")
}




////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


fun main() {
/*
//Operadores L√≥gicos
//
//s√£o usados quando queremos comparar mais de uma coisa na mesma condi√ß√£o
//
//&& -> eb (shift + 7)
// || -> ou (shift + barra invertida)
// 
// TABELA VERDADE (com E e OU)
// 
// && - a determinado a√ß√£o s√≥ acontecer√° se e somente se todos as
// condi√ß√µes forem verdadeiras
// 
// VV -> verdadeiro
// VF -> falso
// FV -> falso
// FF -> falso
// 
// || - a derteminada a√ß√£o ser√° executada se pelo menos uma das
// condi√ß√µes forem verdadeiras
// 
// VV -> verdadeiro
// VF -> verdadeiro
// FV -> verdadeiro
// FF -> falso
// 
// 
// Show do P√©ricles

var idade = 9
var acompanhadoDosPais = true
   
    
if(idade >= 14 && acompanhadoDosPais == true){
print("Pode entra, curte ae")
}else{
print("a entrada n√£o √© permitida para voc√™")
*/
  
    
   
//exerc√≠cio - A sele√ß√£o Brasileira est√° correndo risco de ser eliminada na fase de grupos
//da Copa, o Brasil, s√≥ pode se classificar se a Alemanha perder, e se o pr√≥prio Brasil
//ganhar, As partidas ja passaram, quero saber se o Brasil se classificou ou n√£o
//
// detalhe use os operadores L√≥gicos
/*
    
var brasil = false
var alemanha = true
var marroco = true

if(!alemanha && brasil && !marroco){
    println("Pode isso Arnaldo, Brasil classificaddo!!! Rumo ao hexal Haja Cora√ß√£o")
}else{
    println("Acaboooou, eu s√≥ queria pro meu povo")


}

}
*/




////////////////////////////////////////////////////////////////

// When - Quando
// 
// Quando uma derterminada condi√ß√£o for verdadeira, outra determinada
// a√ß√£o ser√° executada
// 
// Estrutura do When:
// 
// When(var){
// valor -> a√ß√£o a ser executada
// outroValor -> a√ß√£o
// maisUm -> a√ß√£o
// outro -> a√ß√£o
// else -> a√ß√£o
// }
// 
var mes = 2
    
when(mes){
    1 -> println("Alcapulco - MEX")
    2 -> println("Paris - FRA")
    3 -> println("Berlin - ALE")
    4 -> println("Monaco - MON")
    5 -> println("Pequim - CHI")
    6 -> println("Acre - BRA")
    7 -> println("Roma - IT√Å")
    8 -> println("Atenas - GRE")
    9 -> println("Madrid - ESP")
    10 -> println("Manchester - ING")
    11 -> println("Dubai - EUA")
    else -> println("S√£o Paulo - BRA")
    
}
}


//************************************************ ***********************************************

divers√£o principal() {
    
    // La√ßos de Repeti√ß√£o
    //
    // enquanto - enquanto
    // para - para..
    // faz..enquanto faz..enquanto
    // repete - repita
    
    // La√ßo Enquanto ‚ò∫
    // enquanto uma determinada condi√ß√£o para verdadeira, outra determinada
    // a√ß√£o ser√° executada
    //
    //Estrutura do While
    //
    // while(condi√ß√£o){
    // a√ß√£o
    // }
    /*
    var n√∫mero = 0
    
    while(n√∫mero < 10){
        println(n√∫mero)
        n√∫mero++
    }
    */
    
    // La√ßo do.. Enquanto
    //
    // Uma determinada a√ß√£o ser√° executada, enquanto outra determinada condi√ß√£o para
    // verdadeiro
    //
    // Estrutura do do..While
    //
    // fazer{
    // a√ß√£o
    // } while(condi√ß√£o)
    
    var n√∫mero = 0
    
    fazer{
        println(n√∫mero)
        n√∫mero++
    }enquanto(n√∫mero > 10)
    
    //Exerc√≠cio -> O ano n√£o √© bissexto, portanto o ano possui 365 dias, precisa ser exibido no
    //console, os n√∫meros de 1 a 365, usando no m√≠nimo uma vari√°vel, usando os La√ßos While e
    //fazer enquanto
    
    //Divirta-se
}



//************************************************ ***********************************************

fun main() {

    //Lan√ßo de repedi√ß√£o
    //Whille
    //Do
    //
    //for - para...
    //for - para cada item em uma lista/ ou qualquer tipo de cole√ß√£o, ser√° executado uma
    //determinada a√ß√£o
    //
    //Estrutura
    //for (item in lista/colection){
    //a√ß√£o
    //}
    //
    //for(item in 1..10){
      //  println(item)
        


// Exerc√≠cios: fa√ßa a tabuada de um numero de sua escolha (sem a do e, a do 1, do 2 e do 10)
// . observa√ß√£o: precisa utilizar o La√ßo for
/*

for(item in 54..540){
    println(54 * 1)
    println(54 * 2)
    println(54 * 3)
    println(54 * 4)
    println(54 * 5)
    println(54 * 6)
    println(54 * 7)
    println(54 * 8)
    println(54 * 9)
    println(54 * 10)
    
}
}
*/
    
//Repeat - Repita...
//
//uma determinada a√ß√£o ser√° repetida um determinado n√∫mero de vezes
//
var tartaruga = 1
repeat(10){
println(tartaruga)
tartaruga++
}
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

fun main() {

    //Colllection - Cole√ß√µes
    //
    //<> --> tags - servem para especificar o tipo de valora ser Listado
    //
    //S√£o determinadas corjuntos de itens que podem ser modelados e utilizados
    //em determinados m√©todos e opera√ß√µes
    //
    //List - Listas
    //
    //ListOf --> Listam itens de variados tipos
    //
    var genericList = mutableListOf("S√£o Paulo, arroz e pamonha", 25.7f, 23.974, "&",false)
    println(genericList)
    var specificList = listOf<String>("Cruzeiro do Roberto Carlos", "Calleri", "5")
    println(specificList)
    
    
  
 //Index - uma posi√ß√£o collecttion
   
    //Propriedades - List
    //
    //.LastIndex
    //.size
    //
    //println(specificList.lastIndex)
    //println(specificList.first())
    //println(genericList.size)
    //
    //println(specificList.get(0))
    //println(specificList.indexOf("Cruzeiro do Roberto Carlos"))
    
    
    //M√©todos - ListOf
    /*
    genericList.add(2, "easy")
    println(genericList)
    genericList.remove(23.974)
    println(genericList)
    genericList.removeAt(3)
    println(genericList)
    genericList.set(0, "tartaruga")
    println(genericList)
    genericList.clear()
    println(genericList)
    */
    var anotherList = setOf("Pedro", "Diniz", "Pel√©", "Ronaldinho", "Mar√≠lia Mendon√ßa", "Diniz")
    println(anotherList)
    
    var animal = mutableMapOf("tartaruga" to 0, "jabuti" to 1, "Tucano" to 2, "Hiena" to 3, "Mamaco" to 4)
    println(animal)
    
    
      
}

/////////////////////////////////////////////////////////////////////////////////////

fun main() {

/*
var animal = mutableMapOf("tartaruga" to 0, "jabuti" to 1, "Tucano" to 2, "Hiena" to 3, "Mamaco" to 4)
println(animal)
    
animal.put("capivara incrivel", 5)
println(animal)
animal.put("leopardo", 9)
println(animal)
animal.replace("tatu", 3)
println(animal)
*/


//POO
//
//Progama√ß√£o Orientada a Objetos
//
//Objetos - estados (caracter√≠sticas: nome, idade, cpf)
//
//Comportamentos - (andar, comer, dormir, conversar, progamar)
//
//Classes - Modelos que servem para constru√ß√£o de objetos derivados
//
val pessoa1 = Pessoa()
pessoa1.nome = "Keyla"
println(pessoa1.nome)
pessoa1.cpf = "445.177.465.78"
println(pessoa1.cpf)
pessoa1.idade = 99
println(pessoa1.idade)
pessoa1.altura = 1.74
println(pessoa1.altura)
}   

class Pessoa(){
//declara√ß√£o de atributos para a classe Pessoa
var nome= ""
var cpf= ""
var idade= 99
var altura= 1.74
    
    
   
}
//exercico - fa√ßa uma ficha m√©dica, apontando os resultados do ultimo checkup de um cliente
//.permentido usar a mesma classe Pessoa()

val cliente1 = Cliente()
cliente1.nome = "Yago"
println(pessoa1.nome)
cliente1.peso= 80 kg
println(cliente1.peso)
cliente1.cpf = "559.754.325.44"
println(cliente1.cpf)
cliente1.idade = 76
println(cliente1.idade)
cliente1.altura = 1.55
println(cliente1.altura)
cliente1."data de nascimento"= 23/04/1947
println(cliente1."data de nascimento")
cliente1.sitomas = "febre, dor de cabe√ßa"
println(cliente1.sitomas)


class Cliente(){
//declara√ß√£o de atributos para a classe Cliente
var nome= ""
var peso= 80
var cpf= "559.754.325.44"
var idade= 76
var altura= 1.55
var "data de nascimento"= 23/04/1947
var sitomas= "febre, dor de cabe√ßa"


}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

fun main() {
    /*

    var jogador1 = JogadorDeFutebol("Neymar JR", "PSG", 10, "Brasil", "Puma", "Meia-Atacante", 222.0)

    println(jogador1.nome)
    println(jogador1.time)
    println(jogador1.numero)
    println(jogador1.nacionalidade)
    println(jogador1.patrocinio)
    println(jogador1.posicao)
    println(jogador1.preco)
    
    

}
class JogadorDeFutebol(var nome: String,
                      var time: String,
                      var numero: Int,
                      var nacionalidade: String,
                      var patrocinio: String,
                      var posicao: String,
                      var preco: Double){
    
//Exerc√≠cio -Fa√ßa a escola√ß√£o de seu time exibido nome, numero da camisa e posi√ß√£o
    //no m√≠nimo 11 jogadores
    //permetido invertar jogadores
    //Monitora- oii, Boa sorte :)
    */
    
    var jogador1 = JogadorDeFutebol("Cristiano Ronaldo", 7, "Atacante")
    
    println(jogador1.nome)
    println(jogador1.numero)
    println(jogador1.posicao)
    
}
class JogadorDeFutebol(var nome: String,
                      var numero: Int,
                      var posicao: String)


var jogador2 = JogadorDeFutebol1("Rafael Le√£o", 15, "Ponto Esquerda")

    println(jogador2.nome)
    println(jogador2.numero)
    println(jogador2.posicao)

{
class JogadorDeFutebol1(var nome: String,
                      var numero: Int,
                      var posicao: String)

}
   
  
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
 fun main() {

    //M√©todos/fun√ß√µes - s√£o um grupo de a√ß√µes que representam uma determinada atividade de um
    //determinado objeto 
    //
    // Estrutura de um m√©todo no Kotlin 
    // 
    // 
    // 
    // fun nomeDela (parametros - se tiver){
    // a√ß√µes
    // } 
    // 
    // 
    // var nomeDoObjeto = ClasseDele() 
    // 
    // nomeDoObjeto.nomeDela(par√¢metros)  
    //
    
    val contaCorrente = ContaBanco(174253789400012, 0.5, "Rogers")
    contaCorrente.consultarSaldo()
    contaCorrente.Saque(0.3, 2982)
    
}


class ContaBanco(val  num: Long, var saldo: Double, var dono: String){ 
    
    //Consultar Saldo, Saque e Deposito
    //
    fun consultarSaldo(){
       println("O saldo da sua conta √© R$$saldo")
    }
    
    fun Saque(valor: Double, senha: Int){
       
       if(senha == 2984){
            if(saldo >= valor){
                saldo -= valor // vai subtrair o Valor do saldo
                println("Saque de R$$valor realizado com sucesso")
             }else if(valor <= 0){
             println("Impossivel sacar R$$valor")
            }else{
                println("Saldo Imsuficiente saque de R$$valor n√£o realizado") 
             }
          }else{
              println("Senha incorreta! Tente novamente ")
              
              
       }
    }
}
